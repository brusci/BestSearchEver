#import game function
from game import *

#passingMark = 15 #lololol

totalTests = 0

if __name__ == '__main__':
    # size, current_time, obstacles_list, player, enemy
    s = make_init_state(10, 0, [], [5, 5], [2, 2])
                        
    #check get_time()
    if s.get_time() == 0:
        print ("\t Time is correctly initialized, get_time() function passed this test.")
        totalTests += 1
    else:
        print ("\t ERROR: Something went wrong with your time initialization or your get_time() function:")
        print('''\t For the state generated by
                 s = make_init_state(10, 0, [], [2, 2], [0, 0])''')
        print("\t Method s.get_time() should return 0")
        print("\t Your method returned %d"% s.get_time())
        
    #compare get_orders() list with master list
    print("--------------------------------")
    print("Now testing your successor state function:")
    print("\t Testing successors of initial state. Should output four possible states:")
    
    state1 = False
    state2 = False
    state3 = False
    state4 = False
    totalStates = 0
    
    for i in range (0,len(s.successors())):
#         print(s.successors()[i].get_time())
#         print(s.successors()[i].get_orders())
#         print(s.successors()[i].get_robot_status())
        print(s.successors()[i].print_state())